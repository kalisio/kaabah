version: '3.5'

services:
  prometheus:
    image: prom/prometheus:v2.9.2
    volumes:
      - ./../configs/prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    healthcheck:
      test: ["CMD", "wget", "-q", "--tries=1", "--spider", "http://localhost:9090/status"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 1m
    networks:
      - kaabah-network
    deploy:
      replicas: 1
      placement:
        constraints: 
          - node.role == manager
      labels:
        - "traefik.backend=prometheus"
        - "traefik.enable=true"      
        - "traefik.docker.network=kaabah-network"
        - "traefik.port=9090"
        - "traefik.frontend.entryPoints=http,https"
        - "traefik.frontend.auth.basic=${AUTH_USER}:${AUTH_PASSWORD}"
        - "traefik.frontend.rule=Host:prometheus.${SUBDOMAIN}"
      restart_policy:
        condition: on-failure
    depends_on:
      - traefik

  node-exporter:
    image: prom/node-exporter:v0.17.0
    command: 
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    networks:
      - kaabah-network
    deploy:
      mode: global
      restart_policy:
        condition: on-failure

  alertmanager:
    image: prom/alertmanager:v0.17.0
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=https://alertmanager.${SUBDOMAIN}'
    healthcheck:
      test: ["CMD", "wget", "-q", "--tries=1", "--spider", "http://localhost:9093/metrics"]
      interval: 30s
      timeout: 5s
      start_period: 1m     
    volumes:
      - ./../configs/prometheus/:/etc/alertmanager/
    networks:
      - kaabah-network
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      labels:
        - "traefik.backend=alertmanager"
        - "traefik.enable=true"      
        - "traefik.docker.network=kaabah-network"
        - "traefik.port=9093"
        - "traefik.frontend.entryPoints=http,https"
        - "traefik.frontend.auth.basic=${AUTH_USER}:${AUTH_PASSWORD}"
        - "traefik.frontend.rule=Host:alertmanager.${SUBDOMAIN}"
      restart_policy:
        condition: on-failure
    depends_on:
      - prometheus

  cadvisor:
    image: google/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - kaabah-network
    deploy:
      mode: global
      restart_policy:
        condition: on-failure

volumes:
  prometheus_data: {}

networks:
  kaabah-network:
    name: ${DOCKER_NETWORK}
    external: true
    
