(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{174:function(a,t,s){"use strict";s.r(t);var e=s(0),r=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"advanced-usage"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#advanced-usage","aria-hidden":"true"}},[a._v("#")]),a._v(" Advanced usage")]),a._v(" "),s("h2",{attrs:{id:"docker-swarm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-swarm","aria-hidden":"true"}},[a._v("#")]),a._v(" Docker swarm")]),a._v(" "),s("h3",{attrs:{id:"managing-labels"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#managing-labels","aria-hidden":"true"}},[a._v("#")]),a._v(" Managing labels")]),a._v(" "),s("p",[a._v("If you desire to update the labels on your cluster and keep track of the changes, you need to:")]),a._v(" "),s("ol",[s("li",[a._v("taint the resources attached to the labels you want to change: "),s("code",[a._v("null_resource.manager_labels")]),a._v(" and "),s("code",[a._v("null_resource.worker_labels.*")])])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token comment"}},[a._v("# Taint the labels attached to the desired nodes, i.e. the worker 1 and the manager")]),a._v("\n"),s("span",{attrs:{class:"token variable"}},[a._v("$terraform")]),a._v(" taint -module"),s("span",{attrs:{class:"token operator"}},[a._v("=")]),a._v("AWS null_resource.worker_labels.1\n"),s("span",{attrs:{class:"token variable"}},[a._v("$terraform")]),a._v(" taint -module"),s("span",{attrs:{class:"token operator"}},[a._v("=")]),a._v("AWS null_resource.manager_labels\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[s("p",[a._v("update your variables file: "),s("code",[a._v("workspaces/<file>.tfvars")])])]),a._v(" "),s("li",[s("p",[a._v("apply the changes")])])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token variable"}},[a._v("$terraform")]),a._v(" apply -var-file"),s("span",{attrs:{class:"token operator"}},[a._v("=")]),s("span",{attrs:{class:"token string"}},[a._v('"workspaces/<file>.tfvars"')]),a._v("\n")])])]),s("h3",{attrs:{id:"using-the-registry"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#using-the-registry","aria-hidden":"true"}},[a._v("#")]),a._v(" Using the registry")]),a._v(" "),s("p",[a._v("Using the registry is simple as:")]),a._v(" "),s("ol",[s("li",[a._v("build or pull the desired Docker image")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token comment"}},[a._v("# Build example")]),a._v("\n"),s("span",{attrs:{class:"token variable"}},[a._v("$docker")]),a._v(" build https://github.com/"),s("span",{attrs:{class:"token operator"}},[a._v("<")]),a._v("organisation"),s("span",{attrs:{class:"token operator"}},[a._v(">")]),a._v("/"),s("span",{attrs:{class:"token operator"}},[a._v("<")]),a._v("repository"),s("span",{attrs:{class:"token operator"}},[a._v(">")]),a._v(".git -t "),s("span",{attrs:{class:"token operator"}},[a._v("<")]),a._v("image"),s("span",{attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[a._v("tag the image")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token variable"}},[a._v("$docker")]),a._v(" tag "),s("span",{attrs:{class:"token operator"}},[a._v("<")]),a._v("image"),s("span",{attrs:{class:"token operator"}},[a._v(">")]),a._v(" 127.0.0.1:5000/"),s("span",{attrs:{class:"token operator"}},[a._v("<")]),a._v("image"),s("span",{attrs:{class:"token operator"}},[a._v(">")]),a._v(":"),s("span",{attrs:{class:"token operator"}},[a._v("<")]),a._v("tag"),s("span",{attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[a._v("push the image into the registry")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token variable"}},[a._v("$docker")]),a._v(" push 127.0.0.1:5000/"),s("span",{attrs:{class:"token operator"}},[a._v("<")]),a._v("image"),s("span",{attrs:{class:"token operator"}},[a._v(">")]),a._v(":"),s("span",{attrs:{class:"token operator"}},[a._v("<")]),a._v("tag"),s("span",{attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),s("ol",{attrs:{start:"4"}},[s("li",[a._v("create or deploy a service using the image in the registry")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token comment"}},[a._v("# create a service")]),a._v("\n"),s("span",{attrs:{class:"token variable"}},[a._v("$docker")]),a._v(" "),s("span",{attrs:{class:"token function"}},[a._v("service")]),a._v(" create --replicas 4 --name "),s("span",{attrs:{class:"token operator"}},[a._v("<")]),a._v("service"),s("span",{attrs:{class:"token operator"}},[a._v(">")]),a._v(" 127.0.0.4:5000/"),s("span",{attrs:{class:"token operator"}},[a._v("<")]),a._v("image"),s("span",{attrs:{class:"token operator"}},[a._v(">")]),a._v(":"),s("span",{attrs:{class:"token operator"}},[a._v("<")]),a._v("tag"),s("span",{attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),s("p",[a._v("or")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token comment"}},[a._v("# deploy the service within a stack:")]),a._v("\n"),s("span",{attrs:{class:"token variable"}},[a._v("$docker")]),a._v(" stack deploy -c "),s("span",{attrs:{class:"token operator"}},[a._v("<")]),a._v("service.yml"),s("span",{attrs:{class:"token operator"}},[a._v(">")]),a._v(" -c "),s("span",{attrs:{class:"token operator"}},[a._v("<")]),a._v("other-service.yml"),s("span",{attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{attrs:{class:"token punctuation"}},[a._v("..")]),a._v(". "),s("span",{attrs:{class:"token operator"}},[a._v("<")]),a._v("stack"),s("span",{attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),s("p",[a._v("where "),s("code",[a._v("<service.yml>")]),a._v(" is a "),s("strong",[a._v("Docker Compose file")]),a._v(" with the following skeleton:")]),a._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{attrs:{class:"token key atrule"}},[a._v("version")]),s("span",{attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),s("span",{attrs:{class:"token string"}},[a._v("'3.5'")]),a._v("\n\n"),s("span",{attrs:{class:"token key atrule"}},[a._v("services")]),s("span",{attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[a._v("<service>")]),s("span",{attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),s("span",{attrs:{class:"token key atrule"}},[a._v("image")]),s("span",{attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" 127.0.0.1"),s("span",{attrs:{class:"token punctuation"}},[a._v(":")]),a._v("5000/<image"),s("span",{attrs:{class:"token punctuation"}},[a._v(">")]),s("span",{attrs:{class:"token punctuation"}},[a._v(":")]),a._v("<tag"),s("span",{attrs:{class:"token punctuation"}},[a._v(">")]),a._v("\n    "),s("span",{attrs:{class:"token key atrule"}},[a._v("networks")]),s("span",{attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n      "),s("span",{attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" kaabah"),s("span",{attrs:{class:"token punctuation"}},[a._v("-")]),a._v("network\n    "),s("span",{attrs:{class:"token key atrule"}},[a._v("deploy")]),s("span",{attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n      "),s("span",{attrs:{class:"token key atrule"}},[a._v("replicas")]),s("span",{attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" <replicas"),s("span",{attrs:{class:"token punctuation"}},[a._v(">")]),a._v("\n\n"),s("span",{attrs:{class:"token key atrule"}},[a._v("networks")]),s("span",{attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[a._v("kargo-network")]),s("span",{attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),s("span",{attrs:{class:"token key atrule"}},[a._v("name")]),s("span",{attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" $"),s("span",{attrs:{class:"token punctuation"}},[a._v("{")]),a._v("DOCKER_NETWORK"),s("span",{attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n    "),s("span",{attrs:{class:"token key atrule"}},[a._v("external")]),s("span",{attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),s("span",{attrs:{class:"token boolean important"}},[a._v("true")]),a._v("\n")])])]),s("h2",{attrs:{id:"services"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#services","aria-hidden":"true"}},[a._v("#")]),a._v(" Services")]),a._v(" "),s("h3",{attrs:{id:"updating-the-services"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#updating-the-services","aria-hidden":"true"}},[a._v("#")]),a._v(" Updating the services")]),a._v(" "),s("p",[a._v("When updating Kaabah, you may need to update the services running on a given infrastructure. You can rely on Terraform to proceed:")]),a._v(" "),s("ol",[s("li",[a._v("taint the resource assigned to the services, that is to say: "),s("code",[a._v("null_resource.services")])])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token variable"}},[a._v("$terraform")]),a._v(" taint -module"),s("span",{attrs:{class:"token operator"}},[a._v("=")]),a._v("AWS null_resource.services\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[a._v("apply to update the services")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token variable"}},[a._v("$terraform")]),a._v(" apply -var-file"),s("span",{attrs:{class:"token operator"}},[a._v("=")]),s("span",{attrs:{class:"token string"}},[a._v('"workspaces/<file>.tfvars"')]),a._v("\n")])])]),s("h3",{attrs:{id:"extending-the-services"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#extending-the-services","aria-hidden":"true"}},[a._v("#")]),a._v(" Extending the services")]),a._v(" "),s("p",[s("strong",[a._v("Kaabah")]),a._v(" allows you to extend the default services for a given cluster. For this, you must use the "),s("code",[a._v("extensions_dir")]),a._v(" variable and let it to point to an existing directory that includes:")]),a._v(" "),s("ul",[s("li",[a._v("a "),s("code",[a._v("deploy")]),a._v(" directory where to put the "),s("strong",[a._v("Docker Compose files")]),a._v(" to be used to deploy the services")]),a._v(" "),s("li",[a._v("a "),s("code",[a._v("configs")]),a._v(" directory to be used to store the configuration of the services")])]),a._v(" "),s("p",[a._v("You can take advantage of this feature to:")]),a._v(" "),s("ul",[s("li",[a._v("extend the configuration of an existing service, i.e. add some limits to the container's resources")]),a._v(" "),s("li",[a._v("override the default configuration of the existing services")]),a._v(" "),s("li",[a._v("bootstrap your cluster with additional services")])])])}],!1,null,null,null);r.options.__file="advanced-usage.md";t.default=r.exports}}]);