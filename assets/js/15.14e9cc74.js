(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{229:function(a,t,s){"use strict";s.r(t);var e=s(19),r=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"advanced-usage"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#advanced-usage"}},[a._v("#")]),a._v(" Advanced usage")]),a._v(" "),s("h2",{attrs:{id:"cluster"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cluster"}},[a._v("#")]),a._v(" Cluster")]),a._v(" "),s("h3",{attrs:{id:"using-rclone"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#using-rclone"}},[a._v("#")]),a._v(" Using rclone")]),a._v(" "),s("p",[s("strong",[a._v("Kaabah")]),a._v(" installs "),s("a",{attrs:{href:"https://https://rclone.org/",target:"_blank",rel:"noopener noreferrer"}},[a._v("rclone"),s("OutboundLink")],1),a._v(" on each node of your cluster. By default, the configuration file is empty and you must configure it as you need it. Please refer to the official "),s("a",{attrs:{href:"https://rclone.org/docs/#configure",target:"_blank",rel:"noopener noreferrer"}},[a._v("guide"),s("OutboundLink")],1),a._v(" to configure "),s("strong",[a._v("rclone")]),a._v(".\nHowever you can tell "),s("strong",[a._v("Kaabah")]),a._v(" to provision an already defined configuration using the variable "),s("code",[a._v("rclone_conf")]),a._v(" in your configuration file:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("rclone_conf "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"path_to_workspace/rclone.conf"')]),a._v("\n")])])]),s("h3",{attrs:{id:"using-fail2ban"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#using-fail2ban"}},[a._v("#")]),a._v(" Using fail2ban")]),a._v(" "),s("p",[s("strong",[a._v("Kaabah")]),a._v(" installs "),s("a",{attrs:{href:"https://www.fail2ban.org/wiki/index.php/Main_Page",target:"_blank",rel:"noopener noreferrer"}},[a._v("fail2ban"),s("OutboundLink")],1),a._v(" on each node of your cluster with one customized "),s("strong",[a._v("jail")]),a._v(" for SSH connection attempts. By default, it comes with the following configuration:")]),a._v(" "),s("div",{staticClass:"language-ini extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ini"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[a._v("[sshd]")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("enabled")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),a._v(" true")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("maxretry")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),a._v(" 3")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("ignoreip")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),a._v(" 127.0.0.1 PRIVATE_NETWORK_CIDR")]),a._v("\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[a._v("TIP")]),a._v(" "),s("p",[a._v("By default "),s("strong",[a._v("fail2ban")]),a._v(" will ignore SSH connections from any hosts in your private network.")])]),a._v(" "),s("h4",{attrs:{id:"checking-the-service"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#checking-the-service"}},[a._v("#")]),a._v(" Checking the service")]),a._v(" "),s("p",[a._v("You can test the service using the command:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$sudo")]),a._v(" fail2ban-client status sshd\n")])])]),s("h4",{attrs:{id:"unban-an-ip-address"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#unban-an-ip-address"}},[a._v("#")]),a._v(" Unban an IP address")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$sudo")]),a._v(" fail2ban-client "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("set")]),a._v(" sshd unbanip "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("ip_address"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),s("h4",{attrs:{id:"ban-an-ip-address"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ban-an-ip-address"}},[a._v("#")]),a._v(" Ban an IP address")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$sudo")]),a._v(" fail2ban-client "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("set")]),a._v(" sshd banip "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("ip_address"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),s("h3",{attrs:{id:"using-crontab"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#using-crontab"}},[a._v("#")]),a._v(" Using crontab")]),a._v(" "),s("p",[s("strong",[a._v("Kaabah")]),a._v(" provides you the capability to assign a "),s("strong",[a._v("crontab")]),a._v(" to the manager.")]),a._v(" "),s("h4",{attrs:{id:"declaring-a-crontab"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#declaring-a-crontab"}},[a._v("#")]),a._v(" Declaring a crontab")]),a._v(" "),s("p",[a._v("When building a cluster, you can take advantage of the "),s("code",[a._v("manager_crontab")]),a._v(" variable to declare a crontab file to be provisioned on the manager.")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("manager_crontab "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(' "workspaces/my-workspace/my-crontab\n')])])]),s("p",[a._v("The pointed file must be a valid crontab file. See the "),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Cron",target:"_blank",rel:"noopener noreferrer"}},[a._v("crontab file format"),s("OutboundLink")],1),a._v(" to have the complete specifications.")]),a._v(" "),s("p",[a._v("Here is an example of a crontab file that executes the "),s("RouterLink",{attrs:{to:"/reference/helper-commands.html#k-swarm-prune"}},[s("code",[a._v("k-swarm-prune")])]),a._v(" command every 2 hours:")],1),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Clears the swarm every tow hour")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" */2 * * * k-swarm-prune\n\n")])])]),s("p",[a._v("Once installed, you can list the actions using the command:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$crontab")]),a._v(" -l\n")])])]),s("p",[a._v("And check the logs with the command:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$grep")]),a._v(" CRON /var/log/syslog\n")])])]),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[a._v("WARNING")]),a._v(" "),s("p",[a._v("Do not forget to add a "),s("code",[a._v("newline")]),a._v(" at the end of the file, otherwise the installation will fail.")])]),a._v(" "),s("h4",{attrs:{id:"updating-a-crontab"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#updating-a-crontab"}},[a._v("#")]),a._v(" Updating a crontab")]),a._v(" "),s("p",[a._v("To update the crontab, on the manager, follow this procedure:")]),a._v(" "),s("ol",[s("li",[a._v("taint the resource assigned to the crontab, that is to say: "),s("code",[a._v("null_resource.manager_crontab")])])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$terraform")]),a._v(" taint -module"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("AWS null_resource.manager_crontab\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[a._v("apply to update the services")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$terraform")]),a._v(" apply -var-file"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"workspaces/my-workspace/my-vars.tfvars"')]),a._v("\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[a._v("TIP")]),a._v(" "),s("p",[a._v("To remove a crontab, just simply clear the "),s("code",[a._v("manager_crontab")]),a._v(" variable and update the "),s("code",[a._v("null_resource.manager_crontab")]),a._v(" resource as indicated above.")])]),a._v(" "),s("h2",{attrs:{id:"docker-swarm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-swarm"}},[a._v("#")]),a._v(" Docker swarm")]),a._v(" "),s("h3",{attrs:{id:"managing-labels"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#managing-labels"}},[a._v("#")]),a._v(" Managing labels")]),a._v(" "),s("p",[a._v("If you desire to update the labels on your cluster and keep track of the changes, you need to:")]),a._v(" "),s("ol",[s("li",[a._v("taint the resources attached to the labels you want to change: "),s("code",[a._v("null_resource.manager_labels")]),a._v(" and "),s("code",[a._v("null_resource.worker_labels.*")])])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Taint the labels attached to the desired nodes, i.e. the worker 1 and the manager")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$terraform")]),a._v(" taint -module"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("AWS null_resource.worker_labels.1\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$terraform")]),a._v(" taint -module"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("AWS null_resource.manager_labels\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[s("p",[a._v("update your variables file: "),s("code",[a._v("workspaces/<file>.tfvars")])])]),a._v(" "),s("li",[s("p",[a._v("apply the changes")])])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$terraform")]),a._v(" apply -var-file"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"workspaces/<file>.tfvars"')]),a._v("\n")])])]),s("h3",{attrs:{id:"using-the-registry"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#using-the-registry"}},[a._v("#")]),a._v(" Using the registry")]),a._v(" "),s("p",[a._v("Using the registry is simple as:")]),a._v(" "),s("ol",[s("li",[a._v("build or pull the desired Docker image")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Build example")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$docker")]),a._v(" build https://github.com/"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("organisation"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("/"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("repository"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(".git -t localhost:5000/"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("image"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(":"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("tag"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[a._v("push the image into the registry")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$docker")]),a._v(" push localhost:5000/"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("image"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(":"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("tag"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),s("ol",{attrs:{start:"4"}},[s("li",[a._v("create or deploy a service using the image in the registry")])]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# create a service")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("service")]),a._v(" create --replicas "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),a._v(" --name "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("service"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" localhost:5000/"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("image"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(":"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("tag"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),s("p",[a._v("or")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# deploy the service within a stack:")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$docker")]),a._v(" stack deploy -c "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("service.yml"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" -c "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("other-service.yml"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(". "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("stack"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),s("p",[a._v("where "),s("code",[a._v("<service.yml>")]),a._v(" is a "),s("strong",[a._v("Docker Compose file")]),a._v(" with the following skeleton:")]),a._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'3.5'")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("services")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("<service>")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" localhost"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("5000/<image"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("<tag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("networks")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" kaabah"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("network\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("deploy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("replicas")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" <replicas"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("networks")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("kargo-network")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("DOCKER_NETWORK"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("external")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[a._v("true")]),a._v("\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);